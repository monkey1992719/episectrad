# Generated by Django 2.1 on 2019-11-06 14:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('email_confirmed', models.BooleanField(blank=True, default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Backtest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.IntegerField(default=0)),
                ('pricebar_pattern', models.CharField(max_length=128)),
                ('chart_pattern', models.CharField(max_length=128)),
                ('attribute', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'backtests',
            },
        ),
        migrations.CreateModel(
            name='ChartPlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plottype', models.CharField(default='Line', max_length=30)),
                ('plotname', models.CharField(max_length=256)),
                ('setting_manual', models.IntegerField()),
            ],
            options={
                'db_table': 'chart_plot',
            },
        ),
        migrations.CreateModel(
            name='ChartPlotDefaultSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('color', models.CharField(default='#000000', max_length=30)),
                ('width', models.IntegerField(default=1)),
                ('plottype', models.CharField(default='Line', max_length=30)),
                ('plot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ChartPlot')),
            ],
            options={
                'db_table': 'chart_plot_default_setting',
            },
        ),
        migrations.CreateModel(
            name='ChartPlotSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('color', models.CharField(default='#000000', max_length=30)),
                ('width', models.IntegerField(default=1)),
                ('plottype', models.CharField(default='Line', max_length=30)),
                ('plot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ChartPlot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chart_plot_setting',
            },
        ),
        migrations.CreateModel(
            name='ChartString',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'chart_strings',
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(default='GOLD', max_length=16)),
                ('period', models.CharField(default='36m', max_length=16)),
                ('interval', models.CharField(default='15min', max_length=16)),
                ('bIntraday', models.IntegerField(default=0)),
                ('enter_signal', models.IntegerField(default=0)),
                ('title', models.CharField(default='My Dashboard', max_length=256)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dashboards',
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('id_letter', models.CharField(max_length=32)),
                ('category', models.CharField(max_length=32)),
                ('value_indicator', models.IntegerField(default=0)),
                ('possible_combine', models.IntegerField(default=0)),
                ('combine_main', models.IntegerField(default=0)),
                ('param_name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'indicators',
            },
        ),
        migrations.CreateModel(
            name='IndicatorInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=256)),
                ('datatype', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'indicator_input',
            },
        ),
        migrations.CreateModel(
            name='IndicatorInputValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=32)),
                ('indicator_input', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.IndicatorInput')),
            ],
            options={
                'db_table': 'indicator_input_value',
            },
        ),
        migrations.CreateModel(
            name='TradeIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backtest_mode', models.IntegerField(choices=[(0, 'Traditional'), (1, 'Threshold'), (2, 'Change Direction'), (3, 'Cross with Other'), (4, 'Cross with Inverted'), (5, 'Value Set'), (6, 'Time Set')], default=0)),
                ('with_main', models.IntegerField(default=0)),
                ('signal', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trade_indicator',
            },
        ),
        migrations.CreateModel(
            name='TradeIndicatorCross2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_plot1', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cp2cp1', to='dashboard.ChartPlot')),
                ('chart_plot2', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cp2cp2', to='dashboard.ChartPlot')),
            ],
            options={
                'db_table': 'trade_indicator_cross2',
            },
        ),
        migrations.CreateModel(
            name='TradeIndicatorCrossv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_plot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ChartPlot')),
            ],
            options={
                'db_table': 'trade_indicator_crossv',
            },
        ),
        migrations.CreateModel(
            name='TradeIndicatorIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('traditional', models.IntegerField(default=0)),
                ('indicator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Indicator')),
                ('trade_indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.TradeIndicator')),
            ],
            options={
                'db_table': 'trade_indicator_indicator',
            },
        ),
        migrations.CreateModel(
            name='TradeIndicatorPlotThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold_b', models.FloatField(default=0.0)),
                ('threshold_s', models.FloatField(default=0.0)),
                ('plot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.ChartPlot')),
                ('trade_indicator_indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.TradeIndicatorIndicator')),
            ],
            options={
                'db_table': 'trade_indicator_plot_threshold',
            },
        ),
        migrations.AddField(
            model_name='tradeindicatorcrossv',
            name='trade_indicator_indicator',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.TradeIndicatorIndicator'),
        ),
        migrations.AddField(
            model_name='tradeindicatorcross2',
            name='trade_indicator_indicator1',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tii2tii1', to='dashboard.TradeIndicatorIndicator'),
        ),
        migrations.AddField(
            model_name='tradeindicatorcross2',
            name='trade_indicator_indicator2',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tii2tii2', to='dashboard.TradeIndicatorIndicator'),
        ),
        migrations.AddField(
            model_name='indicatorinputvalue',
            name='trade_indicator_indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.TradeIndicatorIndicator'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='indicatorinputs',
            field=models.ManyToManyField(to='dashboard.IndicatorInput'),
        ),
        migrations.AddField(
            model_name='chartplot',
            name='indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Indicator'),
        ),
        migrations.AddField(
            model_name='backtest',
            name='dashboard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Dashboard'),
        ),
        migrations.AddField(
            model_name='backtest',
            name='tradeindicator',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dashboard.TradeIndicator'),
        ),
    ]
